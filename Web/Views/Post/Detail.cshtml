@model Web.ViewModels.Post.PostViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<div class="post-detail">
    <div class="row">
        <div class="col-12 d-flex flex-column">
            <h2>@Model.Title</h2>
            <p>@Model.RowCreatedDateTime.ToString("MMM dd, yyyy HH:mm:ss")</p>
            <span>
                @Html.Raw(Model.Content)
            </span>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-12 comments">
            <h3>Comments</h3>
            <textarea id="CommentEditor" class="comment-editor" maxlength="1024"></textarea>
            <div class="d-flex justify-content-end align-items-center comment-info">
                <span style="color: #aaa;">Author: </span>
                <input type="text" class="comment-author" placeholder="anon">
                <span class="comment-msg"></span>
                <span class="character-count">0/1024</span>
                <img src="~/images/loader.gif" class="loader d-none" width="25" height="25"/>
                <input type="hidden" id="RequestVerificationToken" name="RequestVerificationToken" value="@GetAntiXsrfRequestToken()">
                <button class="btn btn-primary comment-add" data-id="@Model.Id">Add</button>
            </div>
            <div class="comments-list">
                @if(Model.Comments != null && Model.Comments.Count() == 0)
                {
                    <h4 class="first-to-comment">Be the first to comment!</h4>
                }
                else {
                    foreach(var comment in Model.Comments)
                    {
                        <partial name="~/Views/Partials/_CommentPartial.cshtml" model="comment"/>
                    }
                }
            </div>
        </div>
    </div>
</div>