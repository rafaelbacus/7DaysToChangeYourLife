@using Helper;
@using Web.Models;
@{
    var submitInfo = ViewData[Constants.FormSubmit] != null ? (FormSubmit)ViewData[Constants.FormSubmit] : null;
}

@if(submitInfo != null)
{
    if(submitInfo.Result == null)
    {
        // First load 
        <div class="form-group btn-grp-submission">
            <button type="button" class="btn btn-cancel" data-indexUrl="@submitInfo.IndexUrl">Cancel</button>
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
        <div class="form-group btn-grp-cancellation d-none">
            <p>Some fields have an entry. Are you sure you want to cancel?</p>
            <button type="button" class="btn btn-danger btn-cancel-no">No</button>
            <a class="btn btn-success btn-cancel-yes" href="@submitInfo.IndexUrl">Yes</a>
        </div>
    }
    else
    {
        // Form submitted at least once after ModelState Validation
        var textColor = submitInfo.Result.Succeeded ? "text-success" : "text-danger";

        <div class="form-group">
            <p class="@textColor message">@submitInfo.Result.Message</p>
        </div>

        @if(submitInfo.Result.Succeeded)
        {
            <div class="form-group">
                <a class="btn btn-default" href="@submitInfo.IndexUrl">Go back</a>
            </div>
        }
        else
        {
            <div class="form-group btn-grp-submission">
                <button type="button" class="btn btn-cancel" data-indexUrl="@submitInfo.IndexUrl">Cancel</button>
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
            <div class="form-group btn-grp-cancellation d-none">
                <p>Some fields have an entry. Are you sure you want to cancel?</p>
                <button type="button" class="btn btn-danger btn-cancel-no">No</button>
                <a class="btn btn-success btn-cancel-yes" href="@submitInfo.IndexUrl">Yes</a>
            </div>
        }
    }
}